# CODE EXAMPLE IN SQUANCHY#
# ------------------------------------------------#


# prueba de comentario
multilnea#


# OPERATORS #

a+b*c**2-(-1/2)

x:5+6
x:y:z:8

not a or b and c

pi

tuple : (a,b,c)

True and False

(a<<2)+1


# LISTS #

numbers : [1,2,3,4]
truths  : [True,False,False]
strings : ["here","are","some","strings"]

list : [1,2,3,4,5,"hello"]
mylist : [12,45463,1.56,"hello",
			45,35,57]

list_of_list : [1,2,3,[1,2,3]]


multiline_list : [
	a,b,c,
	d,e,f,
	1,2,3,
	"hi!",5.76,True
]


# TUPLES #

my_Tuple: ("Hello world", False)
my_tuple : (1,"hello",5.6)
((2,3), True)
((2,3), [2,3])
[(1,2), (3,4), (5,6)]


mylist.1
my_tuple.3

# GLOBAL #

global u
global v


# CONSTANTS #

a := 5
b := True
c := "constant"


# LAMBDA #

add : lambda a b :: a+b
lambda r :: r**2*pi


# FUNCTIONS #

foo () -> True
suma (a,b) -> a+b
foo (a,b) -> "function"
suma (4,5) -> 9

resta (a,b) -> (c,d) :: c:a-b
	d:(a-b)**2

suma (a,b) -> (c,d) ::
	c:a+b
	a:a+15
	b:5


# WHILE #

while a<56 ::
	a:a+1
	b:True

while a<100 ::
	if a > 50 then print ("hola") else suma(a,1)
	lambda a :: a+1
	function (a,b)-> (c,d) :: 
		c:a+b
		d:a-b

a:0
while a<len(lista)::
	lista.a : a
	a:a+1



# IF-THE-ELSE #

if a then b else c

if a
then b;c
	d
else if a1 
then b2
else c2

if a<=50
	then d : "hi!"
	else d: "bye"

if a<=50
then d : "hi!" 
else d: "bye"


# ------------------------------------------------#

while a ::
	while b ::
		while c ::
			while d ::
				while e ::
					while f ::
						while g ::
							pass



fib (a) -> b ::
	if a<2 then 
		b:1 
	else b: fib(a-1)+ fib(a-2)


# QUICKSORT ALGORTIHM #

quicksort (lista) -> sort_list ::
	less : []
	eq : []
	big : []
	if len(lista)>1 then
		pivot: lista.0
		while (i<len(lista)) ::
			if lista.i < pivot then add(less,lista.i)
			if lista.i = pivot then add(eq,lista.i)
			if lista.i > pivot then add(big,lista.i)
		sort_list : quicksort(less) + eq + quicksort(big)
	else sort_list : lista
